{"version":3,"sources":["app.js","login/login.ctrl.js","registration/registration.ctrl.js","main/main.ctrl.js","common/services/auth-interceptor.fctr.js","common/services/auth.fctr.js","common/services/cards.fctr.js","common/services/list.fctr.js","common/services/test.fctr.js","main/lists/lists.ctrl.js","main/profile/profile.ctrl.js","common/directives/card/card.drv.js","common/directives/click-outside/click-outside.drv.js","common/directives/custom-focus/custom-focus.js","common/directives/list/list.drv.js","common/directives/on-finish-render/on-finish-render.drv.js"],"names":["configRouter","$locationProvider","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","controllerAs","abstract","otherwise","html5Mode","configRun","$rootScope","$state","$window","$on","event","toState","stateNames","name","split","document","body","className","length","angular","module","config","run","$inject","LoginPageController","TestService","login","validate","save","text","responce","console","log","vm","submitted","email","password","this","RegistrationPageController","AuthService","registration","userData","username","response","localStorage","token","user","userName","go","error","signupVm","message","data","MainPageController","closeDropdown","showDropdown","configInterceptors","$httpProvider","interceptors","push","authInterceptor","$q","$injector","request","headers","Authorization","responseError","status","get","reject","factory","$resource","type","method","params","ListService","id","ListsPageController","$scope","createNewList","newListTitle","newList","title","cards","lists","focusOn","setResizeScroll","setVisibleNewList","visibleNewList","removeList","filter","i","widthAllElemet","querySelector","style","width","$broadcast","listOptions","accept","sourceNodeScope","destNodesScope","destIndex","list","$element","hasClass","listPlaceholder","card","cardPlaceholder","ProfilePageController","avatar","cardDirective","linkFunc","scope","elem","attrs","directive","restrict","replace","link","clickOutsideDirective","$document","$parse","element","fn","eventHandler","childElement","contains","target","$apply","on","off","customFocusDirective","$timeout","$watch","value","focus","trigger","listDirective","reload","listController","bindToController","showNewCardInput","visibleNewCard","createNewCard","newCardsText","newCards","onFinishRender","$last","$emit"],"mappings":"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","file":"main.min.js","sourcesContent":["(function() {\n\n  angular\n    .module('trelloProject', ['ui.router', 'ngResource', 'ui.tree', 'ngScrollable'])\n    .config(configRouter)\n    .run(configRun)\n\n    configRouter.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\n    function configRouter($locationProvider, $stateProvider, $urlRouterProvider){\n      $stateProvider\n        .state('home', {\n          url: '/',\n          templateUrl: './scripts/home/home.tpl.html'\n        })\n        .state('login',{\n          url: '/login',\n          templateUrl: './scripts/login/login.tpl.html',\n          controller: 'LoginPageController',\n          controllerAs: 'vm'\n        })\n        .state('registration',{\n          url: '/registation',\n          templateUrl: './scripts/registration/registration.tpl.html',\n          controller: 'RegistrationPageController',\n          controllerAs: 'vm'\n        })\n        .state(\"main\", {\n          url: \"\",\n          abstract: true,\n          templateUrl: './scripts/main/main.tpl.html',\n          controller: 'MainPageController',\n          controllerAs: 'vm'\n        })\n        .state('main.lists',{\n          url: '/lists',\n          templateUrl: './scripts/main/lists/lists.tpl.html',\n          controller: 'ListsPageController',\n          controllerAs: 'vm'\n        })\n        .state('main.profile',{\n          url: '/profile',\n          templateUrl: './scripts/main/profile/profile.tpl.html',\n          controller: 'ProfilePageController',\n          controllerAs: 'vm'\n        })\n        .state('404', {\n          url: '/404',\n          templateUrl: './scripts/404/404.tpl.html'\n        });\n\n      $urlRouterProvider.otherwise('/404');\n      $locationProvider.html5Mode(true);\n    }\n\n    configRun.$inject = ['$rootScope', '$state', '$window'];\n    function configRun($rootScope, $state, $window) {\n      $rootScope.$on('$stateChangeSuccess', function(event, toState){\n        var stateNames = toState.name.split('.');\n        document.body.className = stateNames[stateNames.length - 1] + '-page';\n      });\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('LoginPageController', LoginPageController);\n\n    LoginPageController.$inject = ['TestService'];\n    function LoginPageController(TestService) {\n      var vm = this;\n\n      vm.login = login;\n\n      function login(validate) {\n        TestService.save({}, { text: 'Im nigga, nigga' }, function (responce) {\n          console.log(responce)\n        });\n        vm.submitted = true;\n\n        if (validate) {\n          console.log(vm.email)\n          console.log(vm.password)\n          // alert(\"well done\");\n        }\n      }\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('RegistrationPageController', RegistrationPageController);\n\n    RegistrationPageController.$inject = [\"$window\", \"$state\", \"AuthService\"];\n    function RegistrationPageController($window, $state, AuthService) {\n      var vm = this;\n      vm.registration = registration;\n\n      function registration(validate) {\n        vm.submitted = true;\n\n        if (validate) {\n          var userData = {\n            username: vm.name,\n            email:    vm.email,\n            password: vm.password\n          }\n\n          AuthService.save({}, userData, function (response) {\n            $window.localStorage.token = response.token;\n            $window.localStorage.user = vm.userName;\n            $state.go('main.lists');\n            // $state.go(\"main.interests\", { username: signupVm.userName });\n          }, function (error) {\n            delete $window.localStorage.token;\n            signupVm.message = error.data.message;\n          });\n\n        }\n      }\n\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('MainPageController', MainPageController);\n\n    function MainPageController() {\n      var vm = this;\n      vm.showDropdown = false;\n      vm.closeDropdown = closeDropdown;\n\n      function closeDropdown() {\n        vm.showDropdown = false;\n      }\n    }\n\n})();\n","(function() {\n  \"use strict\";\n\n  angular.module(\"trelloProject\")\n    .factory('AuthInterceptor', authInterceptor)\n    .config(configInterceptors);\n\n    configInterceptors.$inject = [\"$httpProvider\"];\n    function configInterceptors($httpProvider) {\n      $httpProvider.interceptors.push(\"AuthInterceptor\");\n    }\n\n    authInterceptor.$inject = [\"$rootScope\", \"$q\", \"$window\", \"$injector\"];\n    function authInterceptor($rootScope, $q, $window, $injector) {\n      return {\n        request: function (config) {\n          config.headers = config.headers || {};\n          if ($window.localStorage.token) {\n            config.headers.Authorization = \"Bearer \" + $window.localStorage.token;\n          }\n          return config;\n        },\n        responseError: function (response) {\n          if (response.status === 401) {\n            // handle the case where the user is not authenticated\n            $injector.get('$state').go(\"home\"); // redirect to home page\n          } else if (response.status === 404) {\n            $injector.get('$state').go(\"404\");\n          }\n          return $q.reject(response);\n        }\n      };\n    }\n})();\n","/**\n * This service controll user authorisation\n**/\n\n(function() {\n  \"use strict\";\n\n  angular\n    .module(\"trelloProject\")\n    .factory(\"AuthService\", AuthService);\n\n    AuthService.$inject = [\"$resource\"];\n    function AuthService($resource) {\n      return $resource(\"/auth/:type\", {\n        type: \"@type\"\n      },\n      {\n        save: {\n          method: \"POST\",\n          params: {\n            type: \"signup\"\n          }\n        },\n        login: {\n          method: \"POST\",\n          params: {\n            type: \"login\"\n          }\n        }\n      });\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('ListService', ListService);\n\n    ListService.$inject = ['$resource'];\n    function ListService($resource) {\n      return $resource('/card/:id', {\n        id: '@id'\n      });\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('ListService', ListService);\n\n    ListService.$inject = ['$resource'];\n    function ListService($resource) {\n      return $resource('resource.json');\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('TestService', TestService);\n\n    TestService.$inject = ['$resource'];\n    function TestService($resource) {\n      return $resource('/start/what');\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('ListsPageController', ListsPageController);\n\n    ListsPageController.$inject = [\"$scope\", \"ListService\"];\n    function ListsPageController($scope, ListService) {\n      var vm = this;\n      vm.visibleNewList = false;\n      vm.createNewList = createNewList;\n      vm.setVisibleNewList = setVisibleNewList;\n      vm.removeList = removeList;\n\n      $scope.listOptions = {\n        accept: function(sourceNodeScope, destNodesScope, destIndex) {\n          var list = sourceNodeScope.$element.hasClass(\"list__wrapper\");\n          var listPlaceholder = destNodesScope.$element.hasClass(\"list__placeholder\");\n          var card = sourceNodeScope.$element.hasClass(\"list__card\");\n          var cardPlaceholder = destNodesScope.$element.hasClass(\"card__placeholder\");\n\n          if (list === listPlaceholder) {\n            return true;\n          } if (card === cardPlaceholder) {\n            return true;\n          }\n        }\n      }\n\n      // $scope.$on('ngRepeatFinished', function(ngRepeatFinishedEvent) {\n      //   // $scope.$broadcast('content.reload');\n      //   // $scope.$broadcast('content.changed');\n      // });\n\n      ListService.get(function(responce) {\n        vm.lists = responce.lists;\n        setResizeScroll();\n      });\n\n      function createNewList() {\n        if (vm.newListTitle) {\n          var newList = {\n            title: vm.newListTitle,\n            cards: []\n          }\n\n          vm.lists.push(newList);\n          vm.focusOn = true;\n          vm.newListTitle = null;\n          setResizeScroll();\n        }\n      }\n\n      function setVisibleNewList() {\n        vm.visibleNewList = true;\n        vm.focusOn = true;\n      }\n\n      function removeList(title) {\n        vm.lists = vm.lists.filter(function(i) {\n          return i.title !== title;\n        });\n      }\n\n      function setResizeScroll() {\n        var widthAllElemet = (vm.lists.length + 1) * 290;\n        document.querySelector('.lists__wrapper').style.width = widthAllElemet + 'px';\n        $scope.$broadcast('content.changed');\n      }\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('ProfilePageController', ProfilePageController);\n\n    ProfilePageController.$inject = ['ListService']\n    function ProfilePageController(ListService) {\n      var vm = this;\n\n      ListService.get(function(responce) {\n        vm.username = responce.name;\n        vm.email = responce.email;\n        vm.avatar = responce.avatar;\n      });\n\n    }\n\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('card', cardDirective);\n\n    function cardDirective() {\n      var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {\n          data:\"=\"\n        },\n        templateUrl: './scripts/common/directives/card/card.tpl.html',\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, elem, attrs) {\n\n      }\n    }\n})();\n","/**\n * This directive close dropdown by click on any other element\n */\n(function() {\n  \"use strict\";\n\n  angular\n    .module(\"trelloProject\")\n    .directive(\"clickOutside\", clickOutsideDirective);\n\n    clickOutsideDirective.$inject = [\"$document\", \"$parse\"];\n    function clickOutsideDirective($document, $parse) {\n      var directive = {\n        restrict: \"A\",\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, element, attrs) {\n        var fn = $parse(attrs['clickOutside']);\n\n        var eventHandler = function(event){\n\n          // any child element in directive elem\n          var childElement = element[0].contains(event.target);\n\n          if (!event || !event.target) {\n              return;\n          }\n\n          if (childElement) {\n            return;\n          }\n\n          return scope.$apply(function () {\n              return fn(scope);\n          });\n        }\n\n        $document.on(\"click\", eventHandler);\n\n        scope.$on(\"$destroy\", function() {\n          $document.off(\"click\", eventHandler);\n        });\n      }\n    }\n})();\n","(function() {\n\n'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('customFocus', customFocusDirective)\n\n    customFocusDirective.$inject = ['$timeout'];\n    function customFocusDirective($timeout) {\n      var directive = {\n        restrict: 'A',\n        scope: {\n          trigger: '=customFocus'\n        },\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, element, attrs) {\n        scope.$watch('trigger', function(value) {\n        if (value) {\n          $timeout(function() {\n            element[0].focus();\n            scope.trigger = false;\n          });\n        }\n      });\n      }\n    }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('list', listDirective);\n\n    function listDirective() {\n      var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {\n          data: '=',\n          reload: '&'\n        },\n        templateUrl: './scripts/common/directives/list/list.tpl.html',\n        controller: listController,\n        controllerAs: 'vm',\n        bindToController: true\n\n      }\n\n      return directive;\n\n    }\n\n    function listController() {\n      var vm = this;\n\n      vm.visibleNewCard = false;\n      vm.closeDropdown = closeDropdown;\n      vm.createNewCard = createNewCard;\n      vm.showNewCardInput = showNewCardInput;\n      vm.removeList = removeList;\n\n\n      function closeDropdown() {\n        vm.showDropdown = false;\n      }\n\n      function showNewCardInput() {\n        vm.visibleNewCard = true;\n        vm.focusOn = true;\n      }\n\n      function removeList() {\n        vm.reload({ title: vm.data.title });\n      }\n\n\n      function createNewCard() {\n        if (vm.newCardsText) {\n          var newCards = {\n            text: vm.newCardsText\n          }\n\n          vm.data.cards.push(newCards);\n          vm.focusOn = true;\n          vm.newCardsText = null;\n        }\n      }\n    }\n})();\n","(function() {\n\n'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('onFinishRender', onFinishRender)\n\n    onFinishRender.$inject = ['$timeout'];\n    function onFinishRender($timeout) {\n      var directive = {\n        restrict: 'A',\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, element, attrs) {\n        if (scope.$last === true) {\n          $timeout(function () {\n            scope.$emit('ngRepeatFinished');\n          });\n        }\n      }\n    }\n\n}());\n"],"sourceRoot":"/source/"}