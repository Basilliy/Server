{"version":3,"sources":["app.js","login/login.ctrl.js","main/main.ctrl.js","registration/registration.ctrl.js","main/lists/lists.ctrl.js","main/profile/profile.ctrl.js","common/services/auth-interceptor.fctr.js","common/services/auth.fctr.js","common/services/cards.fctr.js","common/services/list.fctr.js","common/directives/card/card.drv.js","common/directives/click-outside/click-outside.drv.js","common/directives/custom-focus/custom-focus.js","common/directives/list/list.drv.js","common/directives/on-finish-render/on-finish-render.drv.js"],"names":["configRouter","$locationProvider","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","controllerAs","abstract","otherwise","html5Mode","configRun","$rootScope","$state","$window","$on","event","toState","stateNames","name","split","document","body","className","length","angular","module","config","run","$inject","LoginPageController","AuthService","login","validate","vm","submitted","userData","email","password","response","localStorage","token","user","go","username","error","message","data","clearMessageError","this","MainPageController","closeDropdown","showDropdown","RegistrationPageController","registration","save","ListsPageController","$scope","$stateParams","ListService","activate","get","responce","lists","setResizeScroll","createNewList","newListTitle","title","focusOn","setVisibleNewList","visibleNewList","removeList","filter","i","widthAllElemet","querySelector","style","width","$broadcast","listOptions","accept","sourceNodeScope","destNodesScope","destIndex","list","$element","hasClass","listPlaceholder","card","cardPlaceholder","ProfilePageController","avatar","configInterceptors","$httpProvider","interceptors","push","authInterceptor","$q","$injector","request","headers","Authorization","responseError","status","reject","factory","$resource","type","method","params","CardService","query","isArray","update","id","cardDirective","directive","require","restrict","replace","scope","cardController","bindToController","console","log","clickOutsideDirective","$document","$parse","linkFunc","element","attrs","fn","eventHandler","childElement","contains","target","$apply","on","off","link","customFocusDirective","$timeout","$watch","value","focus","trigger","listDirective","reload","listController","showNewCardInput","visibleNewCard","createNewCard","newCardsText","text","listID","cards","_id","onFinishRender","$last","$emit"],"mappings":"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","file":"main.min.js","sourcesContent":["(function() {\n\n  angular\n    .module('trelloProject', ['ui.router', 'ngResource', 'ui.tree', 'ngScrollable'])\n    .config(configRouter)\n    .run(configRun)\n\n    configRouter.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\n    function configRouter($locationProvider, $stateProvider, $urlRouterProvider){\n      $stateProvider\n        .state('home', {\n          url: '/',\n          templateUrl: './scripts/home/home.tpl.html'\n        })\n        .state('login', {\n          url: '/signin',\n          templateUrl: './scripts/login/login.tpl.html',\n          controller: 'LoginPageController',\n          controllerAs: 'vm'\n        })\n        .state('registration',{\n          url: '/registation',\n          templateUrl: './scripts/registration/registration.tpl.html',\n          controller: 'RegistrationPageController',\n          controllerAs: 'vm'\n        })\n        .state(\"main\", {\n          url: \"\",\n          abstract: true,\n          templateUrl: './scripts/main/main.tpl.html',\n          controller: 'MainPageController',\n          controllerAs: 'vm'\n        })\n        .state('main.lists',{\n          url: '/:username',\n          templateUrl: './scripts/main/lists/lists.tpl.html',\n          controller: 'ListsPageController',\n          controllerAs: 'vm'\n        })\n        .state('main.profile',{\n          url: '/profile',\n          templateUrl: './scripts/main/profile/profile.tpl.html',\n          controller: 'ProfilePageController',\n          controllerAs: 'vm'\n        })\n        .state('notfound', {\n          url: '/404',\n          templateUrl: './scripts/404/404.tpl.html'\n        });\n\n      $urlRouterProvider.otherwise('/404');\n      $locationProvider.html5Mode(true);\n    }\n\n    configRun.$inject = ['$rootScope', '$state', '$window'];\n    function configRun($rootScope, $state, $window) {\n      $rootScope.$on('$stateChangeSuccess', function(event, toState){\n        var stateNames = toState.name.split('.');\n        document.body.className = stateNames[stateNames.length - 1] + '-page';\n      });\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('LoginPageController', LoginPageController);\n\n    LoginPageController.$inject = [\"$window\", \"$state\", \"AuthService\"];\n    function LoginPageController($window, $state, AuthService) {\n      var vm = this;\n\n      vm.login = login;\n      vm.clearMessageError = clearMessageError;\n\n      function login(validate) {\n        vm.submitted = true;\n\n        if (validate) {\n          var userData = {\n            email: vm.email,\n            password: vm.password\n          };\n\n          AuthService.login({}, userData, function (response) {\n            $window.localStorage.token = response.token;\n            $window.localStorage.user = response.user;\n            $state.go('main.lists', { username: response.user });\n\n          }, function (error) {\n            delete $window.localStorage.token;\n            vm.message = error.data.message;\n          });\n        }\n      }\n\n      function clearMessageError() {\n        vm.message = null;\n      }\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('MainPageController', MainPageController);\n\n    function MainPageController() {\n      var vm = this;\n      vm.showDropdown = false;\n      vm.closeDropdown = closeDropdown;\n\n      function closeDropdown() {\n        vm.showDropdown = false;\n      }\n    }\n\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('RegistrationPageController', RegistrationPageController);\n\n    RegistrationPageController.$inject = [\"$window\", \"$state\", \"AuthService\"];\n    function RegistrationPageController($window, $state, AuthService) {\n      var vm = this;\n      vm.registration = registration;\n      vm.clearMessageError = clearMessageError;\n\n      function registration(validate) {\n        vm.submitted = true;\n\n        if (validate) {\n          var userData = {\n            username: vm.name,\n            email:    vm.email,\n            password: vm.password\n          }\n\n          AuthService.save({}, userData, function (response) {\n            $window.localStorage.token = response.token;\n            $window.localStorage.user = vm.name;\n            $state.go(\"main.lists\", { username: vm.name });\n\n          }, function (error) {\n            delete $window.localStorage.token;\n            vm.message = error.data.message;\n          });\n\n        }\n      }\n\n      function clearMessageError() {\n        if (vm.message) {\n          vm.message = null;\n        }\n      }\n\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('ListsPageController', ListsPageController);\n\n    ListsPageController.$inject = [\"$scope\", \"$stateParams\", \"ListService\"];\n    function ListsPageController($scope, $stateParams, ListService) {\n      var vm = this;\n      var user = $stateParams.username;\n      vm.visibleNewList = false;\n      vm.createNewList = createNewList;\n      vm.setVisibleNewList = setVisibleNewList;\n      vm.removeList = removeList;\n\n      activate();\n\n      $scope.listOptions = {\n        accept: function(sourceNodeScope, destNodesScope, destIndex) {\n          var list = sourceNodeScope.$element.hasClass(\"list__wrapper\");\n          var listPlaceholder = destNodesScope.$element.hasClass(\"list__placeholder\");\n          var card = sourceNodeScope.$element.hasClass(\"list__card\");\n          var cardPlaceholder = destNodesScope.$element.hasClass(\"card__placeholder\");\n\n          if (list === listPlaceholder) {\n            return true;\n          } if (card === cardPlaceholder) {\n            return true;\n          }\n        }\n      }\n\n      // $scope.$on('ngRepeatFinished', function(ngRepeatFinishedEvent) {\n      //   // $scope.$broadcast('content.reload');\n      //   // $scope.$broadcast('content.changed');\n      // });\n\n      function activate() {\n        ListService.get({ user: user }, function(responce) {\n          vm.lists = responce.lists;\n          setResizeScroll();\n        });\n      }\n\n      function createNewList() {\n        if (vm.newListTitle) {\n\n          ListService.save({ user: user }, { title: vm.newListTitle }, function (response) {\n            vm.lists = response.lists;\n\n            vm.focusOn = true;\n            vm.newListTitle = null;\n            setResizeScroll();\n          });\n        }\n      }\n\n      function setVisibleNewList() {\n        vm.visibleNewList = true;\n        vm.focusOn = true;\n      }\n\n      function removeList(title) {\n        vm.lists = vm.lists.filter(function(i) {\n          return i.title !== title;\n        });\n      }\n\n      function setResizeScroll() {\n        var widthAllElemet = (vm.lists.length + 1) * 290;\n        document.querySelector('.lists__wrapper').style.width = widthAllElemet + 'px';\n        $scope.$broadcast('content.changed');\n      }\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('ProfilePageController', ProfilePageController);\n\n    ProfilePageController.$inject = ['ListService']\n    function ProfilePageController(ListService) {\n      var vm = this;\n\n      ListService.get(function(responce) {\n        vm.username = responce.name;\n        vm.email = responce.email;\n        vm.avatar = responce.avatar;\n      });\n\n    }\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('trelloProject')\n    .factory('AuthInterceptor', authInterceptor)\n    .config(configInterceptors);\n\n    configInterceptors.$inject = ['$httpProvider'];\n    function configInterceptors($httpProvider) {\n      $httpProvider.interceptors.push('AuthInterceptor');\n    }\n\n    authInterceptor.$inject = ['$rootScope', '$q', '$window', '$injector'];\n    function authInterceptor($rootScope, $q, $window, $injector) {\n      return {\n        request: function (config) {\n          config.headers = config.headers || {};\n          if ($window.localStorage.token) {\n            config.headers.Authorization = 'Bearer ' + $window.localStorage.token;\n          }\n          return config;\n        },\n        responseError: function (response) {\n          if (response.status === 401) {\n            // handle the case where the user is not authenticated\n            $injector.get('$state').go('home'); // redirect to home page\n          } else if (response.status === 404) {\n            $injector.get('$state').go('notfound');\n          }\n          return $q.reject(response);\n        }\n      };\n    }\n})();\n","/**\n * This service controll user authorisation\n**/\n\n(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('AuthService', AuthService);\n\n    AuthService.$inject = ['$resource'];\n    function AuthService($resource) {\n      return $resource('/auth/:type', {\n        type: '@type'\n      },\n      {\n        save: {\n          method: 'POST',\n          params: {\n            type: 'signup'\n          }\n        },\n        login: {\n          method: 'POST',\n          params: {\n            type: 'login'\n          }\n        }\n      });\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('CardService', CardService);\n\n    CardService.$inject = ['$resource'];\n    function CardService($resource) {\n      var data = $resource(\"/api/user/:user/lists/:list/cards/:card\", { user: \"@user\", list: \"@list\", card: \"@card\" }, {\n        query: {\n          method: \"GET\",\n          isArray: false\n        },\n        update:  {\n          method: \"PUT\"\n        }\n      });\n\n      return data;\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('ListService', ListService);\n\n    ListService.$inject = ['$resource'];\n    function ListService($resource) {\n      var data = $resource(\"/api/user/:user/lists/:id\", { user: \"@user\", id: \"@id\"}, {\n        query: {\n          method: \"GET\",\n          isArray: false\n        },\n        update:  {\n          method: \"PUT\"\n        }\n      });\n\n      return data;\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('card', cardDirective);\n\n    function cardDirective() {\n      var directive = {\n        require: '^list',\n        restrict: 'E',\n        replace: true,\n        scope: {\n          data: '='\n        },\n        templateUrl: './scripts/common/directives/card/card.tpl.html',\n        controller: cardController,\n        controllerAs: 'vm',\n        bindToController: true\n      }\n\n      return directive;\n    }\n\n\n    function cardController() {\n      var vm = this;\n      console.log(vm.data)\n    }\n})();\n","/**\n * This directive close dropdown by click on any other element\n */\n(function() {\n  \"use strict\";\n\n  angular\n    .module(\"trelloProject\")\n    .directive(\"clickOutside\", clickOutsideDirective);\n\n    clickOutsideDirective.$inject = [\"$document\", \"$parse\"];\n    function clickOutsideDirective($document, $parse) {\n      var directive = {\n        restrict: \"A\",\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, element, attrs) {\n        var fn = $parse(attrs['clickOutside']);\n\n        var eventHandler = function(event){\n\n          // any child element in directive elem\n          var childElement = element[0].contains(event.target);\n\n          if (!event || !event.target) {\n              return;\n          }\n\n          if (childElement) {\n            return;\n          }\n\n          return scope.$apply(function () {\n              return fn(scope);\n          });\n        }\n\n        $document.on(\"click\", eventHandler);\n\n        scope.$on(\"$destroy\", function() {\n          $document.off(\"click\", eventHandler);\n        });\n      }\n    }\n})();\n","(function() {\n\n'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('customFocus', customFocusDirective)\n\n    customFocusDirective.$inject = ['$timeout'];\n    function customFocusDirective($timeout) {\n      var directive = {\n        restrict: 'A',\n        scope: {\n          trigger: '=customFocus'\n        },\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, element, attrs) {\n        scope.$watch('trigger', function(value) {\n        if (value) {\n          $timeout(function() {\n            element[0].focus();\n            scope.trigger = false;\n          });\n        }\n      });\n      }\n    }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('list', listDirective);\n\n    function listDirective() {\n      var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {\n          data: '=',\n          reload: '&'\n        },\n        templateUrl: './scripts/common/directives/list/list.tpl.html',\n        controller: listController,\n        controllerAs: 'vm',\n        bindToController: true\n      }\n\n      return directive;\n\n    }\n\n    listController.$inject = ['$stateParams', 'CardService'];\n    function listController($stateParams, CardService) {\n      var vm = this;\n      var user = $stateParams.username;\n      var listID = vm.data._id;\n\n      vm.visibleNewCard = false;\n      vm.closeDropdown = closeDropdown;\n      vm.createNewCard = createNewCard;\n      vm.showNewCardInput = showNewCardInput;\n      vm.removeList = removeList;\n\n      function closeDropdown() {\n        vm.showDropdown = false;\n      }\n\n      function showNewCardInput() {\n        vm.visibleNewCard = true;\n        vm.focusOn = true;\n      }\n\n      console.log(vm.data)\n\n      function removeList() {\n        vm.reload({ title: vm.data.title });\n      }\n\n      function createNewCard() {\n        if (vm.newCardsText) {\n          var newCards = {\n            text: vm.newCardsText\n          }\n\n          CardService.save({ user: user, list: listID }, { text: vm.newCardsText }, function (response) {\n            vm.data = response.cards;\n            vm.focusOn = true;\n            vm.newCardsText = null;\n          });\n        }\n      }\n    }\n})();\n","(function() {\n\n'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('onFinishRender', onFinishRender)\n\n    onFinishRender.$inject = ['$timeout'];\n    function onFinishRender($timeout) {\n      var directive = {\n        restrict: 'A',\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, element, attrs) {\n        if (scope.$last === true) {\n          $timeout(function () {\n            scope.$emit('ngRepeatFinished');\n          });\n        }\n      }\n    }\n\n}());\n"],"sourceRoot":"/source/"}