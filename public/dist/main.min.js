!function(){function t(t,e,r){e.state("home",{url:"/",templateUrl:"./scripts/home/home.tpl.html"}).state("login",{url:"/signin",templateUrl:"./scripts/login/login.tpl.html",controller:"LoginPageController",controllerAs:"vm"}).state("registration",{url:"/signup",templateUrl:"./scripts/registration/registration.tpl.html",controller:"RegistrationPageController",controllerAs:"vm"}).state("main",{url:"","abstract":!0,templateUrl:"./scripts/main/main.tpl.html",controller:"MainPageController",controllerAs:"vm"}).state("main.lists",{url:"/user/:username",templateUrl:"./scripts/main/lists/lists.tpl.html",controller:"ListsPageController",controllerAs:"vm"}).state("main.profile",{url:"/profile",templateUrl:"./scripts/main/profile/profile.tpl.html",controller:"ProfilePageController",controllerAs:"vm"}).state("notfound",{url:"/404",templateUrl:"./scripts/404/404.tpl.html"}),r.otherwise("/404"),t.html5Mode(!0)}function e(t,e,r){t.$on("$stateChangeSuccess",function(t,e){var r=e.name.split("."),o=r[r.length-1];"lists"!==o&&(document.body.className=o+"-page")})}angular.module("trelloProject",["ui.router","ngResource","ui.tree","ngScrollable","monospaced.elastic"]).config(t).run(e),t.$inject=["$locationProvider","$stateProvider","$urlRouterProvider"],e.$inject=["$rootScope","$state","$window"]}(),function(){"use strict";function t(t,e,r){function o(o){if(a.submitted=!0,o){var n={email:a.email,password:a.password};r.login({},n,function(r){t.localStorage.token=r.token,t.localStorage.user=r.user,e.go("main.lists",{username:r.user})},function(e){delete t.localStorage.token,a.message=e.data.message})}}function n(){a.message=null}var a=this;a.login=o,a.clearMessageError=n}angular.module("trelloProject").controller("LoginPageController",t),t.$inject=["$window","$state","AuthService"]}(),function(){"use strict";function t(t,e,r,o){function n(){o.get({},function(t){s.avatar=t.user.avatar,s.name=t.user.name})}function a(){s.showDropdown=!1}function i(){delete r.localStorage.token,delete r.localStorage.user,e.go("home")}var s=this;s.showDropdown=!1,s.closeDropdown=a,s.logout=i,t.$on("reloadUserData",n),n()}angular.module("trelloProject").controller("MainPageController",t),t.$inject=["$scope","$state","$window","UserService"]}(),function(){"use strict";function t(t,e,r){function o(o){if(a.submitted=!0,o){var n={username:a.name,email:a.email,password:a.password};r.save({},n,function(r){t.localStorage.token=r.token,t.localStorage.user=a.name,e.go("main.lists",{username:a.name})},function(e){delete t.localStorage.token,a.message=e.data.message})}}function n(){a.message&&(a.message=null)}var a=this;a.registration=o,a.clearMessageError=n}angular.module("trelloProject").controller("RegistrationPageController",t),t.$inject=["$window","$state","AuthService"]}(),function(){"use strict";function t(t){t.interceptors.push("AuthInterceptor")}function e(t,e,r,o){return{request:function(t){return t.headers=t.headers||{},r.localStorage.token&&(t.headers.Authorization="Bearer "+r.localStorage.token),t},responseError:function(t){return 401===t.status?o.get("$state").go("home"):404===t.status&&o.get("$state").go("notfound"),e.reject(t)}}}angular.module("trelloProject").factory("AuthInterceptor",e).config(t),t.$inject=["$httpProvider"],e.$inject=["$rootScope","$q","$window","$injector"]}(),function(){"use strict";function t(t){return t("/auth/:type",{type:"@type"},{save:{method:"POST",params:{type:"signup"}},login:{method:"POST",params:{type:"login"}}})}angular.module("trelloProject").factory("AuthService",t),t.$inject=["$resource"]}(),function(){"use strict";function t(t){var e=t("/api/user/:user/lists/:list/cards/:card",{user:"@user",list:"@list",card:"@card"},{query:{method:"GET",isArray:!1},update:{method:"PUT"}});return e}angular.module("trelloProject").factory("CardService",t),t.$inject=["$resource"]}(),function(){"use strict";function t(t){var e=t("/api/user/:user/lists/:id:type",{user:"@user",id:"@id",type:"@type"},{query:{method:"GET",isArray:!1},update:{method:"PUT"},sort:{method:"POST",params:{type:"sort"}}});return e}angular.module("trelloProject").factory("ListService",t),t.$inject=["$resource"]}(),function(){"use strict";function t(t){var e=t("/api/user/:type",{type:"@type"},{query:{method:"GET",isArray:!1},avatar:{method:"PUT",params:{type:"avatar"}},background:{method:"PUT",params:{type:"background"}},update:{method:"PUT"}});return e}angular.module("trelloProject").factory("UserService",t),t.$inject=["$resource"]}(),function(){"use strict";function t(t,e,r){function o(){r.get({user:u},function(t){c.lists=t.lists,document.body.className=t.background,l()})}function n(t){var e=t.target.dataset.color;e===c.filterColor?c.filterColor=null:c.filterColor=t.target.dataset.color}function a(){c.newListTitle&&r.save({user:u},{title:c.newListTitle},function(t){c.lists=t.lists,c.focusOn=!0,c.newListTitle=null,l()})}function i(){c.visibleNewList=!0,c.focusOn=!0}function s(){r.get({user:u},function(t){c.lists=t.lists,l()})}function l(){var e=290*(c.lists.length+1);document.querySelector(".lists__wrapper").style.width=e+"px",t.$broadcast("content.changed")}var c=this,u=e.username;c.visibleNewList=!1,c.createNewList=a,c.setVisibleNewList=i,c.reloadLists=s,c.setFilterColor=n,o(),t.listOptions={accept:function(t,e,r){var o=t.$element.hasClass("list__wrapper"),n=e.$element.hasClass("list__placeholder"),a=t.$element.hasClass("list__card"),i=e.$element.hasClass("card__placeholder");return o===n?!0:a===i?!0:void 0},dropped:function(){r.sort({user:u},{lists:c.lists},function(t){})}}}angular.module("trelloProject").controller("ListsPageController",t),t.$inject=["$scope","$stateParams","ListService"]}(),function(){"use strict";function t(t,e,r){function o(){r.get({},function(t){i.username=t.user.name,i.email=t.user.email,i.avatar=t.user.avatar})}function n(o){if(o){var n={name:i.username,email:i.email};r.update({},n,function(r){i.messageDone=r.message,e.localStorage.user=i.username,t.$emit("reloadUserData")},function(t){i.messageError=t.data.message})}}function a(e){var o;0!==e.type.localeCompare("image/jpeg")&&0!==e.type.localeCompare("image/png")&&alert("Image file format must be jpeg or png!"),o=new FileReader,o.onload=function(e){r.avatar({},{avatar:e.target.result},function(e){i.avatar=e.avatar,t.$emit("reloadUserData")})},o.readAsDataURL(e)}var i=this;i.updateData=n,i.changeAvatar=a,o()}angular.module("trelloProject").controller("ProfilePageController",t),t.$inject=["$scope","$window","UserService"]}(),function(){"use strict";function t(){var t={restrict:"E",replace:!0,scope:{data:"=",listId:"=",reload:"&"},templateUrl:"./scripts/common/directives/card/card.tpl.html",controller:e,controllerAs:"vm",bindToController:!0};return t}function e(t,e,r){function o(){u.showDropdown=!u.showDropdown}function n(){u.showDropdown=!1}function a(){u.data.text=c,u.changeCardText=!1}function i(){r["delete"]({user:d,list:f,card:m},function(t){u.reload()})}function s(){u.data.text&&r.update({user:d,list:f,card:m},{text:u.data.text},function(t){u.changeCardText=!1})}function l(t){var e=t.target.className;r.update({user:d,list:f,card:m},{color:e},function(t){u.data.color=e})}var c,u=this,d=e.username,m=u.data._id,f=u.listId;u.removeCard=i,u.editCard=o,u.closeDropdown=n,u.closeEditingCard=a,u.saveEditingCard=s,u.setCardColor=l,t.$watch("vm.changeCardText",function(t){t===!0&&(c=u.data.text,u.focusOn=!0)})}angular.module("trelloProject").directive("card",t),e.$inject=["$scope","$stateParams","CardService"]}(),function(){"use strict";function t(t,e){function r(r,o,n){function a(t){e.background({background:t.target.className,user:i},function(e){document.body.className=t.target.className})}var i=t.username;o.bind("click",a)}var o={restrict:"A",link:r};return o}angular.module("trelloProject").directive("changeBackground",t),t.$inject=["$stateParams","UserService"]}(),function(){"use strict";function t(t,e){function r(r,o,n){var a=e(n.clickOutside),i=function(t){var e=o[0].contains(t.target);if(t&&t.target&&!e)return r.$apply(function(){return a(r)})};t.on("click",i),r.$on("$destroy",function(){t.off("click",i)})}var o={restrict:"A",link:r};return o}angular.module("trelloProject").directive("clickOutside",t),t.$inject=["$document","$parse"]}(),function(){"use strict";function t(t){function e(e,r,o){e.$watch("trigger",function(o){o&&t(function(){r[0].focus(),e.trigger=!1})})}var r={restrict:"A",scope:{trigger:"=customFocus"},link:e};return r}angular.module("trelloProject").directive("customFocus",t),t.$inject=["$timeout"]}(),function(){"use strict";function t(){var t={restrict:"E",replace:!0,scope:{data:"=",reload:"&",filteringColor:"="},templateUrl:"./scripts/common/directives/list/list.tpl.html",controller:e,controllerAs:"vm",bindToController:!0};return t}function e(t,e,r,o){function n(){f.showDropdown=!1}function a(){f.visibleNewCard=!0,f.focusOn=!0}function i(){r["delete"]({user:g,id:p},function(t){f.reload()})}function s(t){return f.filteringColor?!(t.color=="card__color--"+f.filteringColor):void 0}function l(){if(f.newCardsText){({text:f.newCardsText});o.save({user:g,list:p},{text:f.newCardsText},function(t){f.data.cards=t.cards,f.focusOn=!0,f.newCardsText=null})}}function c(t){t&&r.update({user:g,id:p},{title:f.data.title},function(t){f.visibleEditTitle=!1})}function u(){f.visibleEditTitle=!1,f.data.title=m}function d(){o.get({user:g,list:p},function(t){f.data.cards=t.cards})}var m,f=this,g=e.username,p=f.data._id;f.visibleNewCard=!1,f.saveNewTitle=c,f.closeDropdown=n,f.createNewCard=l,f.showNewCardInput=a,f.removeList=i,f.cancelEditTitle=u,f.reloadCard=d,f.filterCard=s,t.$watch("vm.visibleEditTitle",function(t){t===!0&&(m=f.data.title,f.focusOn=!0)})}angular.module("trelloProject").directive("list",t),e.$inject=["$scope","$stateParams","ListService","CardService"]}(),function(){"use strict";function t(t){function e(e,r,o){e.$last===!0&&t(function(){e.$emit("ngRepeatFinished")})}var r={restrict:"A",link:e};return r}angular.module("trelloProject").directive("onFinishRender",t),t.$inject=["$timeout"]}(),function(){"use strict";function t(t){function e(e,r,o){function n(t){e.$apply(function(){a(e,{image:t.target.files[0]})})}var a=t(o.fileReader);r.bind("change",n)}var r={restrict:"A",link:e};return r}angular.module("trelloProject").directive("fileReader",t),t.$inject=["$parse"]}();
//# sourceMappingURL=main.min.js.map
